name: CD Pipeline - Dev

on:
  push:
    branches:
      - main

env:
  TF_VERSION: "1.9.8"
  TF_WORKING_DIR: "./terraform"
  BUCKET_NAME: ${{ vars.BUCKET_NAME }}
  REPOSITORY_NAME: ${{ github.event.repository.name }}
  CONTAINER_IMAGE: ${{ vars.AWS_ACCOUNT }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ vars.REPOSITORY_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Terraform Plan
        run: terraform plan -var container_image=${{ env.CONTAINER_IMAGE }}
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

      - name: Terraform Apply
        run: terraform apply --auto-approve -var container_image=${{ env.CONTAINER_IMAGE }}
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}

  # wait-ecs-deploy:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - deploy
  #   steps:
  #     - name: checkout repository
  #       uses: actions/checkout@v4

  #     - name: ECS Wait Deployment Complete
  #       run: aws ecs wait services-stable --cluster ${{ env.CLUSTER_NAME }} --services  ${{ env.APP_NAME }}
  #       env:
  #         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         AWS_REGION: ${{ vars.AWS_REGION }}
